<!-- Affiche tous les topics du corpus -->
{% extends "layout.html.twig" %}

{% block stylesheets %}
<link rel="stylesheet" href="../css/charts.css">
<style>
svg { 
    border: 1px solid black;
    display: block;
    margin: auto;
}

a:link { 
    text-decoration: none;
}

</style>
{% endblock %}

{% block pagebody %}

<h1 class="ui center aligned header">Mots importants du corpus {{ corpus.name }}</h1>

<div id="words_viz"></div>

{% endblock %}

{% block scripts %}
<script src="../javascript/pie_chart.js"></script>
<script src="../javascript/d3.layout.cloud.js"></script>
<script>

    var margin = {top: 10, right: 10, bottom: 10, left: 10},
    width = 960 - margin.left - margin.right,
    height = 700 - margin.top - margin.bottom;
    
    var fill = d3.scale.category20();
    
    var words = {{ words|safe}},
    nb_words = words.length;

    var min_weight = d3.min(words, function (d) { return d.weight; }),
        max_weight = d3.max(words, function (d) { return d.weight; });
    
    var size = d3.scale.linear()
        .range([10, width/8])
        .domain([min_weight, max_weight]);
        
    d3.layout.cloud()
    .timeInterval(10)
    .size([width, height])
    .padding(2)
    .font("Impact")
    .fontSize(function(d) { return d.size; })
    .words( words.map(function(d) {
        return {id_topic: d.id_topic, text: d.word, size: size(d.weight)};
      }))
    //.on("word", progress)
    .on("end", draw)
    .start();
    
    var svg = d3.select("#words_viz").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
            .append("g")
                .attr("transform", "translate(" + (width+margin.left+margin.right)/2 +', ' + (height+margin.top+margin.bottom)/2 + ")");
    
    /*
    var load_progress = 0;
    var progress_bar = d3.select(".page-header")
        .append('div')
        .attr('class', 'progress')
    .append('div')
        .attr('class', 'progress-bar')
        .attr('role', 'progressbar')
        .attr('aria-valuenow', "0")
        .attr('aria-valuemin', "0")
        .attr('aria-valuemax', "100")
        .style('width', '0%');
    */                   
    function progress(d) { 
        //Met Ã  jour la barre de chargement
        load_progress++;
        progress_bar.transition()
                    .attr('aria-valuenow', load_progress)
                    .style('width', 100*load_progress/nb_words + '%');
    }
    function draw(words) {
    
        //On supprime la barre de chargement
        d3.select('.progress')
            .transition()
            .delay(1000)
            .remove();
	   
        var text = svg.selectAll("text")
        .data(words)
      .enter().append("a")
        .attr("xlink:href", function (d) { return "/topics/" + d.id_topic; })
        .append("text")
        .style("font-size", function(d) { return d.size + "px"; })
        .style("font-family", "Impact")
        .style("fill", function(d) { return fill(d.id_topic); })
        .attr("text-anchor", "middle")
        .attr("transform", function(d) {
          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
        })
        .text(function(d) { return d.text; })
        .on('mouseover', over)
        .on('mouseout', out);
        
        text.style('opacity', 0)
            .transition()
            .duration(1000)
            .style('opacity', 1);
    }
    
    function over(d) { 
        d3.selectAll('text').filter(function (e) { return e.id_topic != d.id_topic;})
            .style("opacity", "0.1");
    }
    
    function out(d) { 
        d3.selectAll('text').filter(function (e) { return e.id_topic != d.id_topic;})
            .style("opacity", "1");
    }
  
</script>


{% endblock %}
    
    